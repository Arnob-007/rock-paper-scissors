{"version":3,"sources":["Icons/icon-paper.svg","Icons/icon-scissors.svg","Icons/icon-rock.svg","Icons/bg-triangle.svg","Icons/image-rules.svg","Components/Header/Header.js","Components/Gameplay/Gameplay.js","Components/Footer/Rules.js","Components/Loading/Loading.js","Components/Playing/Playing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","score","className","Gameplay","setPlayed","onClick","src","require","alt","Rules","useState","openRules","setOpenrules","handleRules","document","getElementById","classList","add","setTimeout","id","Loading","Playing","played","setScore","housePlayed","setHousePlayed","result","setResult","playAgain","useEffect","Math","floor","random","housePlay","prevScore","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4a27c53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-paper.69a8c2e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scissors.bec2f9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rock.8ce1e109.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-triangle.1fd44bdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules.5d74d25d.svg\";","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ score }) => {\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<div className='title'>\r\n\t\t\t\t<p className='title__part'>ROCK</p>\r\n\t\t\t\t<p className='title__part'>PAPER</p>\r\n\t\t\t\t<p className='title__part'>SCISSORS</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='scorecard'>\r\n\t\t\t\t<p className='score__title'>SCORE</p>\r\n\t\t\t\t<p className='score'>{score}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Gameplay.css\";\r\n\r\nconst Gameplay = ({setPlayed}) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"body\">\r\n\t\t\t<div className=\"rps__top\">\r\n\t\t\t\t<div onClick = {() => setPlayed('paper')} className=\"rps paper\">\r\n\t\t\t\t\t<img src={require(\"../../Icons/icon-paper.svg\")} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div onClick = {() => setPlayed('scsr')} className=\"rps scsr\">\r\n\t\t\t\t\t<img src={require(\"../../Icons/icon-scissors.svg\")} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div onClick = {() => setPlayed('rock')} className=\"rps rock\">\r\n\t\t\t\t<img src={require(\"../../Icons/icon-rock.svg\")} alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"bg__triangle\"\r\n\t\t\t\tsrc={require(\"../../Icons/bg-triangle.svg\")}\r\n\t\t\t\talt=\"\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Gameplay;\r\n","import React, { useState } from \"react\";\r\nimport \"./Rules.css\";\r\n\r\nconst Rules = () => {\r\n\tconst [openRules, setOpenrules] = useState(false);\r\n\r\n\tconst handleRules = () => {\r\n\t\tif (openRules) {\r\n\t\t\tdocument.getElementById(\"rules\").classList.add(\"rules__disappear\");\r\n\t\t\tsetTimeout(() => setOpenrules(false), 350);\r\n\t\t} else setOpenrules(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='bottom'>\r\n\t\t\t<button onClick={handleRules} className='rules__btn'>\r\n\t\t\t\tRULES\r\n\t\t\t</button>\r\n\t\t\t{openRules && (\r\n\t\t\t\t<div className='rules__container'>\r\n\t\t\t\t\t<div id='rules' className='rules'>\r\n\t\t\t\t\t\t<div className='rules__top'>\r\n\t\t\t\t\t\t\t<h2>RULES</h2>\r\n\t\t\t\t\t\t\t<span onClick={handleRules}>&times;</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<img src={require(\"../../Icons/image-rules.svg\")} alt='' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Rules;\r\n","import React from \"react\";\r\nimport \"./Loading.css\";\r\n\r\nconst Loading = () => {\r\n\treturn (\r\n\t\t<div className='loading'>\r\n\t\t\t<div className='bounce1 itm1'></div>\r\n\t\t\t<div className='bounce1 itm2'></div>\r\n\t\t\t<div className='bounce1 itm3'></div>\r\n\t\t\t<div className='bounce1 itm4'></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport \"./Playing.css\";\r\n\r\nconst Playing = ({ played, setPlayed, setScore }) => {\r\n\tconst [housePlayed, setHousePlayed] = useState(\"\");\r\n\tconst [result, setResult] = useState(\"\");\r\n\r\n\tconst playAgain = () => {\r\n\t\tsetHousePlayed(\"\");\r\n\t\tsetPlayed(\"\");\r\n\t\tsetResult(\"\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst housePlay = () => {\r\n\t\t\tconst randomnumber = Math.floor(Math.random() * (3 - 1 + 1)) + 1;\r\n\t\t\tswitch (randomnumber) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tsetHousePlayed(\"paper\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tsetHousePlayed(\"scsr\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tsetHousePlayed(\"rock\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tsetHousePlayed(\"\");\r\n\t\t\t}\r\n\t\t};\r\n\t\tsetTimeout(() => housePlay(), 3000);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (housePlayed === \"\") return;\r\n\t\tif (played === housePlayed) {\r\n\t\t\tsetResult(\"TIED\");\r\n\t\t} else if (played === \"paper\") {\r\n\t\t\thousePlayed === \"scsr\" ? setResult(\"LOSE\") : setResult(\"WIN\");\r\n\t\t} else if (played === \"scsr\") {\r\n\t\t\thousePlayed === \"rock\" ? setResult(\"LOSE\") : setResult(\"WIN\");\r\n\t\t} else if (played === \"rock\") {\r\n\t\t\thousePlayed === \"paper\" ? setResult(\"LOSE\") : setResult(\"WIN\");\r\n\t\t}\r\n\t}, [housePlayed, played]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (result === \"WIN\") setScore((prevScore) => prevScore + 1);\r\n\t\telse if (result === \"LOSE\") setScore((prevScore) => prevScore - 1);\r\n\t}, [result, setScore]);\r\n\r\n\treturn (\r\n\t\t<div className={`playing ${housePlayed && \"isresult\"}`}>\r\n\t\t\t<div className='played'>\r\n\t\t\t\t<h3>You Picked</h3>\r\n\t\t\t\t{played === \"paper\" && (\r\n\t\t\t\t\t<div className='rps paper'>\r\n\t\t\t\t\t\t<img src={require(\"../../Icons/icon-paper.svg\")} alt='' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{played === \"scsr\" && (\r\n\t\t\t\t\t<div className='rps scsr'>\r\n\t\t\t\t\t\t<img src={require(\"../../Icons/icon-scissors.svg\")} alt='' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{played === \"rock\" && (\r\n\t\t\t\t\t<div className='rps rock'>\r\n\t\t\t\t\t\t<img src={require(\"../../Icons/icon-rock.svg\")} alt='' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{housePlayed && (\r\n\t\t\t\t<div className='result desktop'>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tYOU{\" \"}\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={`${result === \"WIN\" && \"win__color\"} ${\r\n\t\t\t\t\t\t\t\tresult === \"LOSE\" && \"lose__color\"\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{result}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<button onClick={playAgain} className='play__again'>\r\n\t\t\t\t\t\tPLAY AGAIN\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className='played'>\r\n\t\t\t\t<h3>The House Picked</h3>\r\n\t\t\t\t{housePlayed === \"\" && (\r\n\t\t\t\t\t<div className='rps thinking'>\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{housePlayed === \"paper\" && (\r\n\t\t\t\t\t<div className='rps paper'>\r\n\t\t\t\t\t\t<img src={require(\"../../Icons/icon-paper.svg\")} alt='' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{housePlayed === \"scsr\" && (\r\n\t\t\t\t\t<div className='rps scsr'>\r\n\t\t\t\t\t\t<img src={require(\"../../Icons/icon-scissors.svg\")} alt='' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{housePlayed === \"rock\" && (\r\n\t\t\t\t\t<div className='rps rock'>\r\n\t\t\t\t\t\t<img src={require(\"../../Icons/icon-rock.svg\")} alt='' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{housePlayed && (\r\n\t\t\t\t<div className='result mobile'>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tYOU{\" \"}\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={`${result === \"WIN\" && \"win__color\"} ${\r\n\t\t\t\t\t\t\t\tresult === \"LOSE\" && \"lose__color\"\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{result}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<button onClick={playAgain} className='play__again'>\r\n\t\t\t\t\t\tPLAY AGAIN\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Playing;\r\n","import React, { useState } from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport Gameplay from \"./Components/Gameplay/Gameplay\";\nimport Rules from \"./Components/Footer/Rules\";\nimport Playing from \"./Components/Playing/Playing\";\nimport \"./App.css\";\n\nconst App = () => {\n\tconst [played, setPlayed] = useState(\"\");\n\tconst [score, setScore] = useState(0)\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Header score = {score} />\n\t\t\t{!played && <Gameplay setPlayed={setPlayed} />}\n\t\t\t{played && <Playing played={played} setPlayed = {setPlayed} setScore = {setScore} />}\n\t\t\t<Rules />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}